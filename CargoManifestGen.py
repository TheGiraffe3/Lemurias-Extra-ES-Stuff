# The syntax is meant for Python 2.7.10
import datetime
import random



print("SHIPMENT MANIFEST GENERATOR")
print("Would you like to generate a cargo manifest report? Please fill out some information.")

dataFormat = 0
shipName = raw_input("1. Name of ship: ")
shipType = raw_input("2. Type of ship: ")
requestedByUser = input("3. Manifests: ")
print("How would you like your data? \n 1: Terminal output \n 2: .csv \n 3: .txt")
dataFormat = input()
if dataFormat == 1:
	print("Terminal output selected. Initiating generation.")
elif dataFormat == 2:
	print("CSV selected. Please choose a filename.")
	csvNameIn = raw_input("File name: ")
	csvName = (csvNameIn+".csv")
	f = open(csvName, "a")
elif dataFormat == 3:
	print("TXT selected. Please choose a filename.")
	txtNameIn = raw_input("File name: ")
	txtName = (txtNameIn+".txt")
	f = open(txtName, "a")

dupeCount = 0
debugIncrmn = 0
manifestGen = 0
places = [
		"Moonshake, Alpheratz",
		"Hephaestus, Markab",
		"Foundry, Achernar",
		"Maker, Delta Capricorni",
		"Sunracer, Mirfak",
		"Shangri-La, Polaris",
		"Nimbus, Alpha Hydri",
		"Sundive, Sheratan",
		"Delve, Scheat",
		"Amazon, Schedar",
		"Crossroads, Ruchbah",
		"Canyon, Zaurak",
		"Lodestone, Ankaa",
		"Antipode, Matar",
		"Icefall, Menkar",
		"Burthen, Al Dhanab",
		"Quicksilver, Algol",
		"Furnace, Alderamin",
		"Hippocrates, Alnair",
		"Placer, Mirach",
		"Bluestone, Bellatrix",
		"Trove, Hamal",
		"Charybdis Station, Scheat",
		"Oberon Station, Menkar",
		"Valhalla, Epsilon Leonis",
		"Midgard, Aludra",
		"Bivrost, Markab",
		"Asgard, Naos",
		"Haze, Dubhe",
		"Windblain, Regor",
		"Alfheim, Wezen",
		"Muspel, Adhara",
		"Norn, Adhara",
		"Memory, Zosma",
		"Helheim, Suhail",
		"Nifel, Gomeisa",
		"Mani, Avior",
		"Huginn Station, Zosma",
		"Muninn Station, Zosma",
		"Alexandria, Markab",
		"Leviathan Station, Suhail",
		"Fenrir Station, Avior",
		"Pheonix Station, Wezen",
		"New Britain, Dabih",
		"New Holland, Alphecca",
		"Rand, Zeta Aquilae",
		"Bounty, Delta Velorum",
		"Gemstone, Turais",
		"Heartland, Cor Caroli",
		"Big Sky, Sarin",
		"New Iceland, Kaus Borealis",
		"Clark, Seginus",
		"Tundra, Cebalrai",
		"New Tibet, Alioth",
		"New Kansas, Muhlifain",
		"New Austria, Menkent",
		"Hopper, Kaus Australis",
		"New Wales, Algorel",
		"Oblivion, Rasalhague",
		"New Argentina, Vindemiatrix",
		"New Boston, Rutilicus",
		"New Portland, Delta Sagittarii",
		"Arabia, Ascella",
		"New Washington, Peacock",
		"New Greenland, Arcturus",
		"New India, Albaldah",
		"Ingot, Tania Australis",
		"Sinter, Albireo",
		"New Sahara, Phecda",
		"Hydra Station, Algorel",
		"Hope, Wei",
		"Watcher, Algieba",
		"Prime, Betelgeuse",
		"Shroud, Alheka",
		"Maelstrom, Nihal",
		"Skillet, Saiph",
		"Splashdown, Canopus",
		"Pilot, Elnath",
		"Featherweight, Mebsuta",
		"Farpoint, Alnitak",
		"Serpens, Phact",
		"Triton Station, Alheka",
		"Carbuncle Station, Elnath",
		"Earth, Sol",
		"Chiron, Alpha Centauri",
		"Millrace, Fomalhaut",
		"New China, Merak",
		"Reunion, Caph",
		"Mars, Sol",
		"Tinker, Diphda",
		"New Switzerland, Porrima",
		"Geyser, Denebola",
		"Relic, Sirius",
		"Silver, Vega",
		"Shiver, Altair",
		"Luna, Sol",
		"Kraken Station, Caph",
		"Hestia, Talita",
		"Follower, Alphard",
		"Glory, Wazn",
		"Mainsail, Alhena",
		"Farseer, Kursa",
		"Martini, Pollux",
		"Calda, Tejat",
		"Vail, Tejat",
		"Vinci, Miaplacidus",
		"Geminus, Castor",
		"Ada, Aldebaran",
		"Thrall, Pollux",
		"Pearl, Phurad",
		"Hermes, Capella",
		"Buccaneer Bay, Algenib",
		"Covert, Gienah",
		"Stormhold, Alcyone",
		"Deadman's Cove, Almach",
		"Mutiny, Gienah",
		"Freedom, Almaaz",
		"Haven, Arneb",
		"Zenith, Alnilam",
		"Thule, Men",
		"Greenrock, Shaula",
		"Albatross, Nunki",
		"Bloodsea, Antares",
		"Smuggler's Den, Men",
		"Bourne, Gamma Corvi",
		"Longjump, Sabik",
		"Zug, Zubeneschamali",
		"Skymoot, Hadar",
		"Shorebreak, Mimosa",
		"Flood, Unukalhai",
		"Mere, Kochab",
		"Rust, Kraz",
		"Oasis, Spica",
		"Poseidos, Izar",
		"Starcross, Acrux",
		"Thunder, Alkaid",
		"Dune, Zeta Centauri",
		"Typhon Station, Hadar",
		"Wyvern Station, Izar",
		"Solace, Pherkad",
		"Wayfarer, Tarazed",
		"Glaze, Aldhibain",
		"Cornucopia, Kappa Centauri",
		"Trinket, Sargas",
		"Humanika, Sadalmelik",
		"Harmony, Girtab",
		"Lichen, Atria",
		"Deep, Kornephoros",
		"Darkstone, Han",
		"Winter, Yed Prior",
		"Dancer, Rastaban",
		"Poisonwood, Graffias",
		"Sundrinker, Dschubba",
		"Twinstar, Alniyat",
		"Clink, Kornephoros",
		"Charon Station, Aldhibain",
		"Arachne Station, Tarazed",

		# Lemuria's Extra ES Stuff locations

		"Laateli, Illumina",
		"Markaai, Illuria"
		]
cargoList = [
		# DATA DRIVES
        "Movies",
        "Browser history",
        "Sensitive browser history",
        "Video game backups",
        "Rainych covers",
        "Lizz Robinett covers",
        "Unreleased songs",
        "Chatlogs",
        "Open-source software",
        "Proprietary software",
        "Internet memes",
        "Customer data",
        "Sensitive customer data",
        "Ship sensor logs",
        "Ship weapons logs",
        "Ship engines logs",
        "Ship logs",
        "Photos of Sayari",
        "Product review videos",
        "Immersive simulations",
        "Ancestral simulation data",
        "Endless Sky game files",
        "Endless Sky game saves",
        
        # FOOD
        "Animal feed",
		"Apples",
		"Applesauce",
		"Avocados",
		"Bananas",
		"Barley",
		"Black beans",
		"Boxed lunches",
		"Bread",
		"Breakfast cereal",
		"Brownie mix",
		"Butter",
		"Cake mix",
		"Canned anchovies",
		"Canned artichokes",
		"Canned beans",
		"Canned chestnuts",
		"Canned fruit",
		"Canned olives",
		"Cattle",
		"Cheese",
		"Chocolate",
		"Cloned meat",
		"Coffee beans",
		"Cookies",
		"Cooking oils",
		"Corn oil",
		"Corn",
		"Crackers",
		"Cured meat",
		"Dairy products",
		"Dried apples",
		"Dried apricots",
		"Dried meat",
		"Dumplings",
		"Eggs",
		"Evaporated milk",
		"Fast food supplies",
		"Fertilizer",
		"Frozen fish",
		"Frozen meat",
		"Frozen pizzas",
		"Frozen vegetables",
		"Garlic",
		"Grain",
		"Guavas",
		"Honey",
		"Hops",
		"Jerky",
		"Lard",
		"Mangoes",
		"Molasses",
		"Oats",
		"Olive oil",
		"Onions",
		"Peanut oil",
		"Pepper",
		"Pickles",
		"Pineapples",
		"Pinto beans",
		"Potatoes",
		"Pretzels",
		"Prunes",
		"Pumpkins",
		"Purified water",
		"Quinoa",
		"Raisins",
		"Ready-to-eat meals",
		"Rice",
		"Salt",
		"Seaweed",
		"Sheep",
		"Shiitake mushrooms",
		"Snack cakes",
		"Soy products",
		"Spices",
		"Split peas",
		"Sugar",
		"Tea",
		"Tortillas",
		"Vanilla",
		"Vinegar",
		"Wheat",
		"Yams",

		# CLOTHING
		"Beach towels",
		"Blankets",
		"Body armor",
		"Bolts of cloth",
		"Bolts of tweed",
		"Burlap sacks",
		"Canvas",
		"Carpeting",
		"Children's clothing",
		"Coats",
		"Cotton sheets",
		"Cotton thread",
		"Diapers",
		"Denim",
		"Fabric",
		"Flame-retardant fiber",
		"Hats",
		"Helmets",
		"Insulated fabric",
		"Linen sheets",
		"Mannequins",
		"Men's shoes",
		"Parkas",
		"Protective clothing",
		"Rayon",
		"Running shoes",
		"Sailcloth",
		"Socks",
		"Surgical scrubs",
		"Swimsuits",
		"Textiles",
		"Umbrellas",
		"Underwear",
		"Uniforms",
		"Winter coats",
		"Women's shoes",
		"Waterproof fiber",
		"Wool",
		"Work boots",

		#Metal
		"Aluminized steel",
		"Aluminum",
		"Beryllium",
		"Beryllium copper",
		"Brass fittings",
		"Bulk metallic glasses",
		"Cadmium",
		"Cadmium telluride",
		"Cast iron",
		"Chromium",
		"Copper pipes",
		"Copper wire",
		"Copper",
		"Cupronickel",
		"Ductile iron",
		"Gallium",
		"Gallium arsenide",
		"Galvanized steel",
		"Indium",
		"Indium tin oxide",
		"Manganese",
		"Metallic foam",
		"Magnesium",
		"Molybdenum",
		"Monel",
		"Nickel",
		"Niobium",
		"Ore",
		"Osmium",
		"Pig iron",
		"Platinum wool",
		"Platinum",
		"Rebar",
		"Scandium",
		"Sheet metal",
		"Silicon bronze",
		"Silver ingots",
		"Silver",
		"Sintered bronze",
		"Stainless steel",
		"Steel bars",
		"Steel cable",
		"Steel girders",
		"Steel plating",
		"Tin",
		"Titanium",
		"Tool steel blanks",
		"Vanadium",
		"Zinc",

		#Plastic,
		"Acetone",
		"Asphalt",
		"Bakelite",
		"Barrels",
		"Carbon Nanotubing",
		"Crude Oil",
		"Dacron",
		"Diesel Oil",
		"Epoxy Resin",
		"Gasoline",
		"High-Tensile Fibers",
		"Jet Fuel",
		"Lacquer",
		"Lacquer Thinner",
		"Methanal Formaldehyde",
		"Mylar",
		"Nylon Fiber",
		"Organic Polymers",
		"Paint",
		"Petrochemicals",
		"Petroleum",
		"Plastic Pellets",
		"Plastic Welding Rod",
		"Plastic Wrap",
		"Plumber'S Pipe",
		"Polyethylene",
		"Polymerizing Agents",
		"Polystyrene Foam",
		"Recycled Plastic",
		"Resin",
		"Resorcinol Glue",
		"Rubber",
		"Storage Tanks",
		"Styrene Monomers",
		"Unplasticized PVC",
		"Vinylesters",
		"Xylene",

		#Equipment,
		"3D Printers",
		"CNC Machines",
		"Air Conditioners",
		"Aircraft Hulls",
		"Alarm Systems",
		"Bicycles",
		"Breadmaking Machines",
		"Cameras",
		"Cargo Containers",
		"Cement Mixers",
		"Collimators",
		"Combustion Engines",
		"Dehumidifiers",
		"Electric Motors",
		"Exhaust Fans",
		"Extension Ladders",
		"Fasteners",
		"Fencing",
		"Floodlights",
		"Flow Meters",
		"Freezers",
		"Fuel Tanks",
		"Harvesters",
		"Hoverskates",
		"Humidifiers",
		"Hydraulic Pumps",
		"Injection Molds",
		"Jet Engines",
		"Kilns",
		"Lapidary Saws",
		"Mass Spectrometers",
		"Mowers",
		"Ovens",
		"Pallets",
		"Particle Analyzers",
		"Power Tools",
		"Radar Arrays",
		"Refrigerators",
		"Scaffolding",
		"Scales",
		"Sonar Arrays",
		"Sonic Chainsaws",
		"Space Heaters",
		"Spacecraft Hulls",
		"Steam Engines",
		"Sump Pumps",
		"Tavern Fixtures",
		"Theatrical Props",
		"Toilets",
		"Tools",
		"Tractor Parts",
		"Transits",
		"Turbines",
		"Valves",
		"Vehicle Chassis",
		"Vehicles",
		"Ventilators",
		"Water Heaters",
		"Water Purifiers",
		"Water Tanks",
		"Welding Robots",
		"Welding Torches",
		"Wheelbarrows",
		"Whiskey Barrels",

		#Medical,
		"Antibacterials",
		"Antibiotics",
		"Anti-Inflammatories",
		"Antivirals",
		"Arm Slings",
		"Artificial Blood",
		"Artificial Limbs",
		"Artificial Organs",
		"Autoclaves",
		"Bandages",
		"Battlefield Trauma Kits",
		"Bedpans",
		"Body Bags",
		"Coffins",
		"Cough Drops",
		"Diagnostic Devices",
		"Disposable Gloves",
		"Disposable Syringes",
		"Empty Syringes",
		"First Aid Kits",
		"Gauze Pads",
		"Hospital Beds",
		"Hydrogen Peroxide",
		"Intravenous Fluids",
		"Medical Implants",
		"Medical Leeches",
		"Medical Supplies",
		"Medicine",
		"Microscopes",
		"Nutritional Supplements",
		"Ointment",
		"Painkillers",
		"Pharmaceuticals",
		"Prosthetic Limbs",
		"Rubbing Alcohol",
		"Scanners",
		"Surgical Equipment",
		"Tourniquets",
		"Tranquilizers",
		"Tweezers",

		#Industrial,
		"Aniline Dyes",
		"Assorted Shimstock",
		"Battery Acid",
		"Blast Furnaces",
		"Blast Shields",
		"Bleach",
		"Boilers",
		"Catalytic Converters",
		"Caustic Alkalis",
		"Cement Mix",
		"Ceramics",
		"Clay",
		"Coolant",
		"Degreaser Fluid",
		"Diamond Grit",
		"Drive Shafts",
		"Electrical Wire",
		"Elevator Modules",
		"Enamel Ovens",
		"Fiberglass",
		"Gravel",
		"Heat Exchangers",
		"Industrial Catalysts",
		"Industrial Lasers",
		"Industrial Solvents",
		"Insecticides",
		"Insulation",
		"Lathes",
		"Light Bulbs",
		"Liquid Nitrogen",
		"Liquid Oxygen",
		"Lubricants",
		"Lumber",
		"Microfluidics",
		"Milling Machines",
		"Molly Bolts",
		"Nails",
		"Optical Lenses",
		"Paint Remover",
		"Paint",
		"Parts Tumblers",
		"Pesticides",
		"Pickling Vats",
		"Plasma Cutters",
		"Polishing Machines",
		"Prefab Structures",
		"Quicklime",
		"Refractory Bricks",
		"Sand",
		"Screws",
		"Safety Equipment",
		"Semiconductors",
		"Stainless Tubing",
		"Staples",
		"Stem Bolts",
		"Surface Planers",
		"Telescopes",
		"Testing Equipment",
		"Thruster Assemblies",
		"Timber",
		"Turret Lathes",
		"Vacuum Cleaners",
		"Varnish",

		#Electronics,
		"Accelerometers",
		"Amplifiers",
		"Batteries",
		"Capacitors",
		"Circuit Boards",
		"Cloud Chambers",
		"Cooling Fans",
		"Data Storage Modules",
		"De-Ionizers",
		"Diodes",
		"Display Screens",
		"Electrical Transformers",
		"Fiber Optic Cable",
		"Framulators",
		"Fuel Cells",
		"Haptic Materials",
		"Heat Sinks",
		"Hygrometers",
		"Integrated Circuits",
		"Inverters",
		"Ionizers",
		"Light Emitting Diodes",
		"Memory Modules",
		"Microchips",
		"Microswitches",
		"Microtransistors",
		"Microwave Emitters",
		"Monitors",
		"Motherboards",
		"Nichrome Wire",
		"Optical Drives",
		"Optocouplers",
		"Piezoelectrics",
		"Potentiometers",
		"Power Supplies",
		"Processing Units",
		"Quantum Resonators",
		"Resistors",
		"Rod Logic Modules",
		"Semiconductors",
		"Sensors",
		"Silicon Wafers",
		"Solar Panels",
		"Soldering Irons",
		"Solid-State Relays",
		"Speaker Modules",
		"Supercapacitive Fiber",
		"Supercapacitors",
		"Supercomputers",
		"Tactile Switches",
		"Thermal Paste",
		"Thermoelectrics",
		"Touchscreens",
		"Trackpads",
		"Vacuum Tubes",
		"Voltage Converters",
		"Wireless Receivers",

		#Heavy Metals,
		"Actinide Metals",
		"Barium",
		"Bismuth",
		"Depleted Uranium",
		"Fuel Rods",
		"Gold Sheets",
		"Gold Wire",
		"Gold",
		"Lanthanide Metals",
		"Lead",
		"Mercury",
		"Neodymium",
		"Neptunium",
		"Plutonium",
		"Polonium",
		"Raw Pitchblende",
		"Reactor-Grade Plutonium",
		"Reactor-Grade Uranium",
		"Thorium",
		"Tungsten",

		#LUXURY GOODS,
		"Antique Swords",
		"Bawdy Magazines",
		"Brandy",
		"Champagne",
		"Cigars",
		"Cocktail Dresses",
		"Cognac",
		"Companion Robots",
		"Cosmetic Implants",
		"Cosmetics",
		"Custom Pens",
		"Designer Clothing",
		"Designer Suits",
		"Dueling Sabers",
		"Exotic carpets",
		"Exotic hardwoods",
		"Fine art",
		"Fine furniture",
		"Fur coats",
		"Golf clubs",
		"Grandfather clocks",
		"Handbags",
		"High-performance automobiles",
		"Hoverskis",
		"Jewelry",
		"Lawn furniture",
		"Leather",
		"Liqueurs",
		"Live lobsters",
		"Luxury fabrics",
		"Marble",
		"Mineral water",
		"Monogrammed handkerchiefs",
		"Natural diamonds",
		"Numismatic folders",
		"Orchids",
		"Paintings",
		"Paragliders",
		"Perfume",
		"Pleasure craft",
		"Pocket watches",
		"Porcelain",
		"Replica Ming vases",
		"Replica tribal masks",
		"Saffron",
		"Sculptures",
		"Silk",
		"Silver spoons",
		"Surfboards",
		"Tobacco",
		"Venetian blinds",
		"Vodka",
		"Whiskey",
		"Wine",
		"Yachts",
        ]



print("==========================================================================")
print("Sayari Protection Fleet | Bulletin                                        ")
print("Order Recipient: %s (%s)"%(shipName, shipType))
print("==========================================================================")
print("SHIPMENT BULLETIN \n")

if dataFormat == 3:
	f.write("=========================================================================='\n'")
	f.write("Sayari Protection Fleet | Bulletin                                        '\n'")
	f.write("Order Recipient: %s (%s)'\n'"%(shipName, shipType))
	f.write("=========================================================================='\n'")
	f.write("SHIPMENT BULLETIN '\n'")
elif dataFormat == 2:
	f.write("Cargo, tons, Fleet, Departure planet, Departure system, Arrival planet, Arrival system, Shipment ID, Debug No.")
	

while manifestGen < requestedByUser:
	debugIncrmn  += 1
	shipAmmount   = random.randint(4000,5000)
	cargo         = (random.choice(cargoList))
	fleetNo       = random.randint(1,1000)
	sID           = "%08x" % random.randrange(16**8)
	arrive        = (random.choice(places))
	depart        = (random.choice(places))


	if arrive == depart:
		dupeCount += 1

	else:
    		newManif =	(" %s (%r tons) \n Transport Fleet No. %r \n DEP: %s \n ARR: %s \n Shipment ID: %r-%r \n"%(cargo, shipAmmount, fleetNo, depart, arrive, sID, debugIncrmn))
		manifestGen += 1
		newManifcsv = ()

		if dataFormat == 1:
			print(newManif)
		elif dataFormat == 2:
			f.write("%s, %r, TF %r, %s, %s, %r, %r '\n'" %(cargo, shipAmmount, fleetNo, depart, arrive, sID, debugIncrmn))
		elif dataFormat == 3:
			f.write(newManif+"\n")
		
		# reason for variable is to allow it to also write to a file in the future
		
			
if manifestGen == requestedByUser:
	f.close()

		

print("==========================================================================")
print(" END OF REPORT | DO NOT REVEAL TO YUYUKO SAIGYOUJI UNDER PENALTY OF DEATH ")
print("==========================================================================")
print("This Python script generated %r identical departure and arrival location/s, which were prevented from being printed."%(dupeCount))
